# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "dev-w10" ]
  # pull_request:
  #   branches: [ "main" ]

env:
  CLUSTER_NAME: https://tcc-01.th1.proen.cloud/api/

jobs:
  build-docker-image:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./javascript # Here the path to the folder where package-lock.json is located.
    strategy:
      matrix:
        node-version: [14.x]
    #    node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: pwd 0
      run: pwd
    - uses: benjlevesque/short-sha@v2.2
      id: short-sha
      with:
        length: 6
    - run: echo $SHA
      env:
        SHA: ${{ steps.short-sha.outputs.sha }}
    - run: echo $SHA
      env:
        SHA: ${{  env.SHA }}
    - name: Get an entry with a variable that might contain dots or spaces
      id: get_username
      uses: mikefarah/yq@master
      with:
        cmd: yq -i '.spec.template.spec.containers.[0].image = "anonja/nodejs-api-ci:${{ env.SHA }}"' javascript/manifest/dev/deployment.yaml
    - name: images Dev
      run: cat /home/runner/work/week-9-TCC231005/week-9-TCC231005/javascript/manifest/dev/deployment.yaml
    # - name: Set Env
    #   run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    # - name: "Test"
    #   run: |
    #       echo $RELEASE_VERSION
    #       echo ${{ env.RELEASE_VERSION }}
    # - name: Get Tag
    #   id: prepare
    #   uses: Surgo/docker-smart-tag-action@v1
    #   with:
    #     docker_image: anonja/nodejs-api-ci
    # - run: echo ${{ steps.prepare.outputs.tag }}

    #- name: Use Node.js ${{ matrix.node-version }}
    #  uses: actions/setup-node@v3
    #  with:
    #    node-version: ${{ matrix.node-version }}
    #    cache: 'npm'
    #    cache-dependency-path: javascript/package.json
    #- name: run npm commands
    #  run: | 
    #    pwd
    #    npm install
    #    npm run build --if-present
    #    npm test

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./javascript
        push: true
        tags: anonja/nodejs-api-ci:${{ env.SHA }}
    # - name: Connect K8s
    #   run: |
    #     kubectl config set-cluster tcc-01 --server=${{ env.CLUSTER_NAME }} 
    #     kubectl config set-context tcc-01 --cluster=tcc-01
    #     kubectl config set-credentials tcc-01-user --token=${{ secrets.TCC01_TOKEN }}
    #     kubectl config set-context tcc-01 --user=tcc-01-user
    #     kubectl config use-context tcc-01
    # - name: Check CLUSTER_NAME
    #   run: |
    #     kubectl cluster-info
    #     kubectl apply -f manifest/dev/deployment.yaml -n group-1-dev-05